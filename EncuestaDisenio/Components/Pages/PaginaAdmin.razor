@page "/admin"
@inject IJSRuntime JS
@inject NavigationManager Navigation

<h3>Bienvenido @nombreUsuario 👋</h3>

<button type="button" class="btn btn-primary" @onclick="IrAVerEncuesta">Ver encuestas</button>
<button type="button" class="btn btn-secondary" @onclick="IrALLenarEncuesta">Llenar encuesta</button>
<button type="button" class="btn btn-success" @onclick="IrAErliminarEncuesta">Eliminar encuestas</button>
<button type="button" class="btn btn-danger" @onclick="IrAEditarEncuesta">Actualizar encuesta</button>
<button type="button" class="btn btn-warning"@onclick="IrAExportarEncuestas">Exportar encuestas</button>

@code {
    private string nombreUsuario = "Usuario"; // valor por defecto

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                var nombre = await JS.InvokeAsync<string>("localStorage.getItem", "nombre");
                if (!string.IsNullOrEmpty(nombre))
                {
                    nombreUsuario = nombre;
                    StateHasChanged(); // actualiza la UI
                }
            }
            catch
            {
                nombreUsuario = "Usuario";
            }
        }
    }

    private void IrAVerEncuesta() => Navigation.NavigateTo("/respuestas");
    private void IrALLenarEncuesta() => Navigation.NavigateTo("/llenarencuesta");
    private void IrAErliminarEncuesta() => Navigation.NavigateTo("/eliminarrespuestas");
    private void IrAEditarEncuesta() => Navigation.NavigateTo("/respuestaseditar");
    private void IrAExportarEncuestas() => Navigation.NavigateTo("/exportarencuestas");
}
